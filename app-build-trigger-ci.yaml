steps:

 #Build the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/demoapp:$SHORT_SHA'
  - '.'

# Push image to gcr.io Artifact Registry
# The SHORT_SHA variables is automatically replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/demoapp:$SHORT_SHA'


# This step clones the demo-env repository and checks out 
# staging branch
- id: Clone demo environment repository
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    mkdir hydrated-manifests &&
    gcloud source repos clone demo-env && \
    cd demo-env && \
    git checkout staging && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')


#This step modifies the kuberbetes template with image id commit details
#and copies the files to hydrated-manifests for further processing.
- id: Generate manifest
  name: 'gcr.io/cloud-builders/gcloud' 
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" manifests/kubernetes.yaml.template | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > hydrated-manifests/kubernetes.yaml


  # If all works well, this step copies the kubernetes.yaml to staging directory. 
- id: 'Copy config'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/sh'
  args: ['-c', '\cp -r hydrated-manifests/kubernetes.yaml demo-env/config/staging/kubernetes.yaml']

# This step pushes the kubernetes.yaml manifest to demo-env staging branch
- id: Push manifest to demo-env staging branch
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd demo-env && \
    git add config/staging/kubernetes.yaml && \
    git commit -m "Commit manifest for gcr.io/${PROJECT_ID}/demoapp:${SHORT_SHA}" && \
    git push origin staging
